(function($) {
    function easeOutBounce(n) {
      var e = 7.5625, t = 2.75;
      return n < 1/t ? e * n * n : n < 2/t ? e * (n -= 1.5/t) * n + .75 : n < 2.5/t ? e * (n -= 2.25/t) * n + .9375 : e * (n -= 2.625/t) * n + .984375;
    }

    if (typeof $.easing !== "undefined") {
      $.easing.jswing = $.easing.swing;
    }

    $.extend($.easing, {
      def: "easeOutQuad",
      swing: function(n) {
        return $.easing[$.easing.def](n);
      },
      easeInQuad: function(n) {
        return n * n;
      },
      easeOutQuad: function(n) {
        return 1 - (1 - n) * (1 - n);
      },
      easeInOutQuad: function(n) {
        return n < 0.5 ? 2 * n * n : 1 - Math.pow(-2 * n + 2, 2) / 2;
      },
      easeInCubic: function(n) {
        return n * n * n;
      },
      easeOutCubic: function(n) {
        return 1 - Math.pow(1 - n, 3);
      },
      easeInOutCubic: function(n) {
        return n < 0.5 ? 4 * n * n * n : 1 - Math.pow(-2 * n + 2, 3) / 2;
      },
      easeInQuart: function(n) {
        return n * n * n * n;
      },
      easeOutQuart: function(n) {
        return 1 - Math.pow(1 - n, 4);
      },
      easeInOutQuart: function(n) {
        return n < 0.5 ? 8 * n * n * n * n : 1 - Math.pow(-2 * n + 2, 4) / 2;
      },
      easeInQuint: function(n) {
        return n * n * n * n * n;
      },
      easeOutQuint: function(n) {
        return 1 - Math.pow(1 - n, 5);
      },
      easeInOutQuint: function(n) {
        return n < 0.5 ? 16 * n * n * n * n * n : 1 - Math.pow(-2 * n + 2, 5) / 2;
      },
      easeInSine: function(n) {
        return 1 - Math.cos(n * Math.PI / 2);
      },
      easeOutSine: function(n) {
        return Math.sin(n * Math.PI / 2);
      },
      easeInOutSine: function(n) {
        return -(Math.cos(Math.PI * n) - 1) / 2;
      },
      easeInExpo: function(n) {
        return n === 0 ? 0 : Math.pow(2, 10 * n - 10);
      },
      easeOutExpo: function(n) {
        return n === 1 ? 1 : 1 - Math.pow(2, -10 * n);
      },
      easeInOutExpo: function(n) {
        return n === 0 ? 0 : n === 1 ? 1 : n < 0.5 ? Math.pow(2, 20 * n - 10) / 2 : (2 - Math.pow(2, -20 * n + 10)) / 2;
      },
      easeInCirc: function(n) {
        return 1 - Math.sqrt(1 - Math.pow(n, 2));
      },
      easeOutCirc: function(n) {
        return Math.sqrt(1 - Math.pow(n - 1, 2));
      },
      easeInOutCirc: function(n) {
        return n < 0.5 ? (1 - Math.sqrt(1 - Math.pow(2 * n, 2))) / 2 : (Math.sqrt(1 - Math.pow(-2 * n + 2, 2)) + 1) / 2;
      },
      easeInElastic: function(n) {
        return n === 0 ? 0 : n === 1 ? 1 : -Math.pow(2, 10 * n - 10) * Math.sin((n * 10 - 10.75) * (2 * Math.PI / 3));
      },
      easeOutElastic: function(n) {
        return n === 0 ? 0 : n === 1 ? 1 : Math.pow(2, -10 * n) * Math.sin((n * 10 - 0.75) * (2 * Math.PI / 3)) + 1;
      },
      easeInOutElastic: function(n) {
        return n === 0 ? 0 : n === 1 ? 1 : n < 0.5 ? -(Math.pow(2, 20 * n - 10) * Math.sin((20 * n - 11.125) * (2 * Math.PI / 4.5))) / 2 : Math.pow(2, -20 * n + 10) * Math.sin((20 * n - 11.125) * (2 * Math.PI / 4.5)) / 2 + 1;
      },
      easeInBack: function(n) {
        var c = 1.70158;
        return (c + 1) * n * n * n - c * n * n;
      },
      easeOutBack: function(n) {
        var c = 1.70158;
        return 1 + (c + 1) * Math.pow(n - 1, 3) + c * Math.pow(n - 1, 2);
      },
      easeInOutBack: function(n) {
        var c = 1.70158;
        var o = 1.525 * c;
        return n < 0.5 ? Math.pow(2 * n, 2) * ((o + 1) * 2 * n - o) / 2 : Math.pow(2 * n - 2, 2) * ((o + 1) * (2 * n - 2) + o) / 2 + 2;
      },
      easeInBounce: function(n) {
        return 1 - easeOutBounce(1 - n);
      },
      easeOutBounce: easeOutBounce,
      easeInOutBounce: function(n) {
        return n < 0.5 ? (1 - easeOutBounce(1 - 2 * n)) / 2 : (1 + easeOutBounce(2 * n - 1)) / 2;
      }
    });
  })(jQuery);